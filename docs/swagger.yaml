definitions:
  model.AuthRequest:
    properties:
      password:
        example: strongpassword
        type: string
      username:
        example: wahyu
        type: string
    type: object
  model.AuthResponse:
    properties:
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    type: object
  model.JobResponse:
    properties:
      company:
        type: string
      company_logo:
        type: string
      company_url:
        type: string
      created_at:
        type: string
      description:
        type: string
      how_to_apply:
        type: string
      id:
        type: string
      location:
        type: string
      title:
        type: string
      type:
        type: string
      url:
        type: string
    type: object
  model.UserRequest:
    properties:
      password:
        example: strongpassword
        type: string
      username:
        example: wahyu
        type: string
    type: object
  model.UserResponse:
    properties:
      created_at:
        type: integer
      deleted_at:
        type: integer
      id:
        type: integer
      updated_at:
        type: integer
      username:
        type: string
    type: object
  model.WebResponse:
    properties:
      code:
        type: integer
      data: {}
      status:
        type: string
    type: object
info:
  contact:
    email: wahyumiftahul7@gmail.com
    name: wahyu miftahul aflah
  description: Dans Backnd test
  title: Dans Backnd test
  version: "1.0"
paths:
  /job/:
    get:
      consumes:
      - application/json
      description: get Job data by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.JobResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get Job by id
      tags:
      - job
  /v1/job:
    get:
      consumes:
      - application/json
      description: get all Job Data
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.JobResponse'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get All Job
      tags:
      - job
  /v1/user:
    post:
      consumes:
      - application/json
      description: Create New User / Register User
      parameters:
      - description: Register user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.UserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  type: string
              type: object
      summary: Create User
      tags:
      - user
  /v1/user/auth:
    post:
      consumes:
      - application/json
      description: authenticate user / login User
      parameters:
      - description: Auth user
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/model.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.AuthResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/model.WebResponse'
            - properties:
                data:
                  type: string
              type: object
      summary: Auth User
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
